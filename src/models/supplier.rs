/*
 * # Documentation   The Fortnox API is organized around REST. This means that weâ€™ve designed it to have resource-oriented URLs and be as predictable as possible for you as developer.  It also means that we use HTTP status codes when something goes wrong and HTTP verbs understod by many API clients around the web.  We use a modified version of OAuth2 for authentication to offer a secure way for both you and our users to interact.  The API is generally built to support both XML and JSON but in this documentation all the examples will be in JSON.  We encourage you to read all the articles in the [general information section](https://developer.fortnox.se/general/)</a> first, before going forward and learning about the different resources.  This to ensure you get an understanding of some of the shared components of the API such as parameters and error handling.  ## Rate limits  The limit is 4 requests per second per access-token. This equals to a bit more than 200 requests per minute.  [Read more about this here.](https://developer.fortnox.se/general/regarding-fortnox-api-rate-limits/)  ## Query parameters  Use query parameters with the ?-character and separate parameters with the &-character.   **Example:**  GET - https://api.fortnox.se/3/invoices?accountnumberfrom=3000&accountnumberto=4000 Read more about our parameters [here](https://developer.fortnox.se/general/parameters/)   Search the documentation using the search field in the top left corner.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Supplier {
    #[serde(rename = "@url", skip_serializing_if = "Option::is_none")]
    pub at_url: Option<String>,
    #[serde(rename = "Active", skip_serializing_if = "Option::is_none")]
    pub active: Option<bool>,
    #[serde(rename = "Address1", skip_serializing_if = "Option::is_none")]
    pub address1: Option<String>,
    #[serde(rename = "Address2", skip_serializing_if = "Option::is_none")]
    pub address2: Option<String>,
    #[serde(rename = "Bank", skip_serializing_if = "Option::is_none")]
    pub bank: Option<String>,
    #[serde(rename = "BankAccountNumber", skip_serializing_if = "Option::is_none")]
    pub bank_account_number: Option<String>,
    #[serde(rename = "BG", skip_serializing_if = "Option::is_none")]
    pub bg: Option<String>,
    #[serde(rename = "BIC", skip_serializing_if = "Option::is_none")]
    pub bic: Option<String>,
    #[serde(rename = "BranchCode", skip_serializing_if = "Option::is_none")]
    pub branch_code: Option<String>,
    #[serde(rename = "City", skip_serializing_if = "Option::is_none")]
    pub city: Option<String>,
    #[serde(rename = "ClearingNumber", skip_serializing_if = "Option::is_none")]
    pub clearing_number: Option<String>,
    #[serde(rename = "Comments", skip_serializing_if = "Option::is_none")]
    pub comments: Option<String>,
    #[serde(rename = "CostCenter", skip_serializing_if = "Option::is_none")]
    pub cost_center: Option<String>,
    #[serde(rename = "Country", skip_serializing_if = "Option::is_none")]
    pub country: Option<String>,
    #[serde(rename = "CountryCode", skip_serializing_if = "Option::is_none")]
    pub country_code: Option<String>,
    #[serde(rename = "Currency", skip_serializing_if = "Option::is_none")]
    pub currency: Option<String>,
    #[serde(rename = "DisablePaymentFile", skip_serializing_if = "Option::is_none")]
    pub disable_payment_file: Option<bool>,
    #[serde(rename = "Email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(rename = "Fax", skip_serializing_if = "Option::is_none")]
    pub fax: Option<String>,
    #[serde(rename = "IBAN", skip_serializing_if = "Option::is_none")]
    pub iban: Option<String>,
    #[serde(rename = "Name")]
    pub name: String,
    #[serde(rename = "OrganisationNumber", skip_serializing_if = "Option::is_none")]
    pub organisation_number: Option<String>,
    #[serde(rename = "OurReference", skip_serializing_if = "Option::is_none")]
    pub our_reference: Option<String>,
    #[serde(rename = "OurCustomerNumber", skip_serializing_if = "Option::is_none")]
    pub our_customer_number: Option<String>,
    #[serde(rename = "PG", skip_serializing_if = "Option::is_none")]
    pub pg: Option<String>,
    #[serde(rename = "Phone1", skip_serializing_if = "Option::is_none")]
    pub phone1: Option<String>,
    #[serde(rename = "Phone2", skip_serializing_if = "Option::is_none")]
    pub phone2: Option<String>,
    #[serde(rename = "PreDefinedAccount", skip_serializing_if = "Option::is_none")]
    pub pre_defined_account: Option<String>,
    #[serde(rename = "Project", skip_serializing_if = "Option::is_none")]
    pub project: Option<String>,
    #[serde(rename = "SupplierNumber", skip_serializing_if = "Option::is_none")]
    pub supplier_number: Option<String>,
    #[serde(rename = "TermsOfPayment", skip_serializing_if = "Option::is_none")]
    pub terms_of_payment: Option<String>,
    #[serde(rename = "VATNumber", skip_serializing_if = "Option::is_none")]
    pub vat_number: Option<String>,
    #[serde(rename = "VATType", skip_serializing_if = "Option::is_none")]
    pub vat_type: Option<String>,
    #[serde(rename = "VisitingAddress", skip_serializing_if = "Option::is_none")]
    pub visiting_address: Option<String>,
    #[serde(rename = "VisitingCity", skip_serializing_if = "Option::is_none")]
    pub visiting_city: Option<String>,
    #[serde(rename = "VisitingCountry", skip_serializing_if = "Option::is_none")]
    pub visiting_country: Option<String>,
    #[serde(
        rename = "VisitingCountryCode",
        skip_serializing_if = "Option::is_none"
    )]
    pub visiting_country_code: Option<String>,
    #[serde(rename = "VisitingZipCode", skip_serializing_if = "Option::is_none")]
    pub visiting_zip_code: Option<String>,
    #[serde(rename = "WorkPlace", skip_serializing_if = "Option::is_none")]
    pub work_place: Option<String>,
    #[serde(rename = "WWW", skip_serializing_if = "Option::is_none")]
    pub www: Option<String>,
    #[serde(rename = "YourReference", skip_serializing_if = "Option::is_none")]
    pub your_reference: Option<String>,
    #[serde(rename = "ZipCode", skip_serializing_if = "Option::is_none")]
    pub zip_code: Option<String>,
}

impl Supplier {
    pub fn new(name: String) -> Supplier {
        Supplier {
            at_url: None,
            active: None,
            address1: None,
            address2: None,
            bank: None,
            bank_account_number: None,
            bg: None,
            bic: None,
            branch_code: None,
            city: None,
            clearing_number: None,
            comments: None,
            cost_center: None,
            country: None,
            country_code: None,
            currency: None,
            disable_payment_file: None,
            email: None,
            fax: None,
            iban: None,
            name,
            organisation_number: None,
            our_reference: None,
            our_customer_number: None,
            pg: None,
            phone1: None,
            phone2: None,
            pre_defined_account: None,
            project: None,
            supplier_number: None,
            terms_of_payment: None,
            vat_number: None,
            vat_type: None,
            visiting_address: None,
            visiting_city: None,
            visiting_country: None,
            visiting_country_code: None,
            visiting_zip_code: None,
            work_place: None,
            www: None,
            your_reference: None,
            zip_code: None,
        }
    }
}
